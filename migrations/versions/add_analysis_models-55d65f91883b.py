"""add analysis models

Revision ID: 55d65f91883b
Revises: 30fe7222d98f
Create Date: 2014-11-14 12:41:28.608309

"""

# revision identifiers, used by Alembic.
revision = '55d65f91883b'
down_revision = '30fe7222d98f'

from alembic import op
import sqlalchemy as sa
from batteries.model.types import Ascii, UTCDateTime
from geoalchemy2 import Geometry


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('concept',
    sa.Column('id', sa.Unicode(length=20), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_concept'))
    )
    op.create_table('feature',
    sa.Column('id', sa.Unicode(length=20), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.Column('description', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feature'))
    )
    op.create_table('dimension',
    sa.Column('id', sa.Unicode(length=20), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_dimension'))
    )
    op.create_table('series',
    sa.Column('key', Ascii(length=40), nullable=False),
    sa.Column('concept_id', sa.Unicode(length=20), nullable=True),
    sa.Column('feature_id', sa.Unicode(length=20), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['concept_id'], ['concept.id'], name=op.f('fk_series_concept_id_concept')),
    sa.ForeignKeyConstraint(['feature_id'], ['feature.id'], name=op.f('fk_series_feature_id_feature')),
    sa.PrimaryKeyConstraint('key', name=op.f('pk_series'))
    )
    op.create_index(op.f('ix_series_duration'), 'series', ['duration'], unique=False)
    op.create_table('segment',
    sa.Column('dimension_id', sa.Unicode(length=20), nullable=False),
    sa.Column('id', sa.Unicode(length=20), nullable=False),
    sa.Column('name', sa.Unicode(length=100), nullable=True),
    sa.Column('numeric_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('string_value', sa.Unicode(length=100), nullable=True),
    sa.Column('sort_value', sa.Unicode(length=10), nullable=False),
    sa.ForeignKeyConstraint(['dimension_id'], ['dimension.id'], name=op.f('fk_segment_dimension_id_dimension')),
    sa.PrimaryKeyConstraint('dimension_id', 'id', name=op.f('pk_segment'))
    )
    op.create_table('census_block_series',
    sa.Column('state_fp', sa.Unicode(length=2), nullable=False),
    sa.Column('county_fp', sa.Unicode(length=3), nullable=False),
    sa.Column('tract_ce', sa.Unicode(length=6), nullable=False),
    sa.Column('block_ce', sa.Unicode(length=1), nullable=False),
    sa.Column('series_key', sa.Unicode(length=40), nullable=False),
    sa.ForeignKeyConstraint(['series_key'], ['series.key'], name=op.f('fk_census_block_series_series_key_series')),
    sa.ForeignKeyConstraint(['state_fp', 'county_fp', 'tract_ce', 'block_ce'], ['census_block.state_fp', 'census_block.county_fp', 'census_block.tract_ce', 'census_block.block_ce'], name='fk_census_block_series'),
    sa.PrimaryKeyConstraint('state_fp', 'county_fp', 'tract_ce', 'block_ce', 'series_key', name=op.f('pk_census_block_series'))
    )
    op.create_table('measure',
    sa.Column('series_key', Ascii(length=40), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('value', sa.Numeric(precision=20, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['series_key'], ['series.key'], name=op.f('fk_measure_series_key_series')),
    sa.PrimaryKeyConstraint('series_key', 'id', name=op.f('pk_measure'))
    )
    op.create_index(op.f('ix_measure_date'), 'measure', ['date'], unique=False)
    op.create_index(op.f('ix_measure_value'), 'measure', ['value'], unique=False)
    op.create_table('series_segment',
    sa.Column('series_key', sa.Unicode(length=40), nullable=False),
    sa.Column('dimension_id', sa.Unicode(length=20), nullable=False),
    sa.Column('segment_id', sa.Unicode(length=20), nullable=False),
    sa.ForeignKeyConstraint(['dimension_id', 'segment_id'], ['segment.dimension_id', 'segment.id'], name='fk_series_segment'),
    sa.ForeignKeyConstraint(['dimension_id'], ['dimension.id'], name=op.f('fk_series_segment_dimension_id_dimension')),
    sa.ForeignKeyConstraint(['series_key'], ['series.key'], name=op.f('fk_series_segment_series_key_series')),
    sa.PrimaryKeyConstraint('series_key', 'dimension_id', 'segment_id', name=op.f('pk_series_segment'))
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('series_segment')
    op.drop_index(op.f('ix_measure_value'), table_name='measure')
    op.drop_index(op.f('ix_measure_date'), table_name='measure')
    op.drop_table('measure')
    op.drop_table('census_block_series')
    op.drop_table('segment')
    op.drop_index(op.f('ix_series_duration'), table_name='series')
    op.drop_table('series')
    op.drop_table('dimension')
    op.drop_table('feature')
    op.drop_table('concept')
    ### end Alembic commands ###
